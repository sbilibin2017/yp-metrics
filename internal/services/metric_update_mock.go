// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/services/metric_update.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricSaver is a mock of MetricSaver interface.
type MockMetricSaver struct {
	ctrl     *gomock.Controller
	recorder *MockMetricSaverMockRecorder
}

// MockMetricSaverMockRecorder is the mock recorder for MockMetricSaver.
type MockMetricSaverMockRecorder struct {
	mock *MockMetricSaver
}

// NewMockMetricSaver creates a new mock instance.
func NewMockMetricSaver(ctrl *gomock.Controller) *MockMetricSaver {
	mock := &MockMetricSaver{ctrl: ctrl}
	mock.recorder = &MockMetricSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricSaver) EXPECT() *MockMetricSaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricSaver) Save(ctx context.Context, metrics []types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricSaverMockRecorder) Save(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricSaver)(nil).Save), ctx, metrics)
}
