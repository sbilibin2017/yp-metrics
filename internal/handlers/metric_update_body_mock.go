// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/handlers/metric_update_body.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricUpdaterBody is a mock of MetricUpdaterBody interface.
type MockMetricUpdaterBody struct {
	ctrl     *gomock.Controller
	recorder *MockMetricUpdaterBodyMockRecorder
}

// MockMetricUpdaterBodyMockRecorder is the mock recorder for MockMetricUpdaterBody.
type MockMetricUpdaterBodyMockRecorder struct {
	mock *MockMetricUpdaterBody
}

// NewMockMetricUpdaterBody creates a new mock instance.
func NewMockMetricUpdaterBody(ctrl *gomock.Controller) *MockMetricUpdaterBody {
	mock := &MockMetricUpdaterBody{ctrl: ctrl}
	mock.recorder = &MockMetricUpdaterBodyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricUpdaterBody) EXPECT() *MockMetricUpdaterBodyMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricUpdaterBody) Update(ctx context.Context, metric types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metric)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricUpdaterBodyMockRecorder) Update(ctx, metric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricUpdaterBody)(nil).Update), ctx, metric)
}
