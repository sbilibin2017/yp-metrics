// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/handlers/metric_updates_body.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricUpdatersBody is a mock of MetricUpdatersBody interface.
type MockMetricUpdatersBody struct {
	ctrl     *gomock.Controller
	recorder *MockMetricUpdatersBodyMockRecorder
}

// MockMetricUpdatersBodyMockRecorder is the mock recorder for MockMetricUpdatersBody.
type MockMetricUpdatersBodyMockRecorder struct {
	mock *MockMetricUpdatersBody
}

// NewMockMetricUpdatersBody creates a new mock instance.
func NewMockMetricUpdatersBody(ctrl *gomock.Controller) *MockMetricUpdatersBody {
	mock := &MockMetricUpdatersBody{ctrl: ctrl}
	mock.recorder = &MockMetricUpdatersBodyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricUpdatersBody) EXPECT() *MockMetricUpdatersBodyMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricUpdatersBody) Update(ctx context.Context, metric types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metric)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricUpdatersBodyMockRecorder) Update(ctx, metric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricUpdatersBody)(nil).Update), ctx, metric)
}
