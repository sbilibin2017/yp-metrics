// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/handlers/metric_get_path.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricGetterPath is a mock of MetricGetterPath interface.
type MockMetricGetterPath struct {
	ctrl     *gomock.Controller
	recorder *MockMetricGetterPathMockRecorder
}

// MockMetricGetterPathMockRecorder is the mock recorder for MockMetricGetterPath.
type MockMetricGetterPathMockRecorder struct {
	mock *MockMetricGetterPath
}

// NewMockMetricGetterPath creates a new mock instance.
func NewMockMetricGetterPath(ctrl *gomock.Controller) *MockMetricGetterPath {
	mock := &MockMetricGetterPath{ctrl: ctrl}
	mock.recorder = &MockMetricGetterPathMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricGetterPath) EXPECT() *MockMetricGetterPathMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMetricGetterPath) Get(ctx context.Context, id types.MetricID) (*types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMetricGetterPathMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMetricGetterPath)(nil).Get), ctx, id)
}
