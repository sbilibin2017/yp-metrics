// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/handlers/metric_update_path.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricUpdater is a mock of MetricUpdater interface.
type MockMetricUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockMetricUpdaterMockRecorder
}

// MockMetricUpdaterMockRecorder is the mock recorder for MockMetricUpdater.
type MockMetricUpdaterMockRecorder struct {
	mock *MockMetricUpdater
}

// NewMockMetricUpdater creates a new mock instance.
func NewMockMetricUpdater(ctrl *gomock.Controller) *MockMetricUpdater {
	mock := &MockMetricUpdater{ctrl: ctrl}
	mock.recorder = &MockMetricUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricUpdater) EXPECT() *MockMetricUpdaterMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricUpdater) Update(ctx context.Context, metrics types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricUpdaterMockRecorder) Update(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricUpdater)(nil).Update), ctx, metrics)
}
