// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/workers/metric_agent.go

// Package workers is a generated GoMock package.
package workers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricsUpdater is a mock of MetricsUpdater interface.
type MockMetricsUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsUpdaterMockRecorder
}

// MockMetricsUpdaterMockRecorder is the mock recorder for MockMetricsUpdater.
type MockMetricsUpdaterMockRecorder struct {
	mock *MockMetricsUpdater
}

// NewMockMetricsUpdater creates a new mock instance.
func NewMockMetricsUpdater(ctrl *gomock.Controller) *MockMetricsUpdater {
	mock := &MockMetricsUpdater{ctrl: ctrl}
	mock.recorder = &MockMetricsUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsUpdater) EXPECT() *MockMetricsUpdaterMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricsUpdater) Update(ctx context.Context, req types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricsUpdaterMockRecorder) Update(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricsUpdater)(nil).Update), ctx, req)
}
