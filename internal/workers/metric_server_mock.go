// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yp-metrics/internal/workers/metric_server.go

// Package workers is a generated GoMock package.
package workers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yp-metrics/internal/types"
)

// MockMetricsMemorySaver is a mock of MetricsMemorySaver interface.
type MockMetricsMemorySaver struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMemorySaverMockRecorder
}

// MockMetricsMemorySaverMockRecorder is the mock recorder for MockMetricsMemorySaver.
type MockMetricsMemorySaverMockRecorder struct {
	mock *MockMetricsMemorySaver
}

// NewMockMetricsMemorySaver creates a new mock instance.
func NewMockMetricsMemorySaver(ctrl *gomock.Controller) *MockMetricsMemorySaver {
	mock := &MockMetricsMemorySaver{ctrl: ctrl}
	mock.recorder = &MockMetricsMemorySaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsMemorySaver) EXPECT() *MockMetricsMemorySaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricsMemorySaver) Save(ctx context.Context, metrics types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricsMemorySaverMockRecorder) Save(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricsMemorySaver)(nil).Save), ctx, metrics)
}

// MockMetricsFileSaver is a mock of MetricsFileSaver interface.
type MockMetricsFileSaver struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsFileSaverMockRecorder
}

// MockMetricsFileSaverMockRecorder is the mock recorder for MockMetricsFileSaver.
type MockMetricsFileSaverMockRecorder struct {
	mock *MockMetricsFileSaver
}

// NewMockMetricsFileSaver creates a new mock instance.
func NewMockMetricsFileSaver(ctrl *gomock.Controller) *MockMetricsFileSaver {
	mock := &MockMetricsFileSaver{ctrl: ctrl}
	mock.recorder = &MockMetricsFileSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsFileSaver) EXPECT() *MockMetricsFileSaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricsFileSaver) Save(ctx context.Context, metrics types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricsFileSaverMockRecorder) Save(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricsFileSaver)(nil).Save), ctx, metrics)
}

// MockMetricsMemoryLister is a mock of MetricsMemoryLister interface.
type MockMetricsMemoryLister struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMemoryListerMockRecorder
}

// MockMetricsMemoryListerMockRecorder is the mock recorder for MockMetricsMemoryLister.
type MockMetricsMemoryListerMockRecorder struct {
	mock *MockMetricsMemoryLister
}

// NewMockMetricsMemoryLister creates a new mock instance.
func NewMockMetricsMemoryLister(ctrl *gomock.Controller) *MockMetricsMemoryLister {
	mock := &MockMetricsMemoryLister{ctrl: ctrl}
	mock.recorder = &MockMetricsMemoryListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsMemoryLister) EXPECT() *MockMetricsMemoryListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMetricsMemoryLister) List(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMetricsMemoryListerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMetricsMemoryLister)(nil).List), ctx)
}

// MockMetricsFileLister is a mock of MetricsFileLister interface.
type MockMetricsFileLister struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsFileListerMockRecorder
}

// MockMetricsFileListerMockRecorder is the mock recorder for MockMetricsFileLister.
type MockMetricsFileListerMockRecorder struct {
	mock *MockMetricsFileLister
}

// NewMockMetricsFileLister creates a new mock instance.
func NewMockMetricsFileLister(ctrl *gomock.Controller) *MockMetricsFileLister {
	mock := &MockMetricsFileLister{ctrl: ctrl}
	mock.recorder = &MockMetricsFileListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsFileLister) EXPECT() *MockMetricsFileListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMetricsFileLister) List(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMetricsFileListerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMetricsFileLister)(nil).List), ctx)
}
